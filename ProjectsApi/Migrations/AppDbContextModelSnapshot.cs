// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectsApi.Data;

#nullable disable

namespace ProjectsApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectsApi.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Author 1",
                            Description = "Description 1",
                            Title = "Dummy Title 1"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Author 2",
                            Description = "Description 2",
                            Title = "Dummy Title 2"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Author 3",
                            Description = "Description 3",
                            Title = "Dummy Title 3"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Author 4",
                            Description = "Description 4",
                            Title = "Dummy Title 4"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Author 5",
                            Description = "Description 5",
                            Title = "Dummy Title 5"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Author 6",
                            Description = "Description 6",
                            Title = "Dummy Title 6"
                        });
                });

            modelBuilder.Entity("ProjectsApi.Models.ProjectImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageLocalPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectImage");
                });

            modelBuilder.Entity("ProjectsApi.Models.ProjectImage", b =>
                {
                    b.HasOne("ProjectsApi.Models.Project", "Project")
                        .WithMany("ProjectImages")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectsApi.Models.Project", b =>
                {
                    b.Navigation("ProjectImages");
                });
#pragma warning restore 612, 618
        }
    }
}
